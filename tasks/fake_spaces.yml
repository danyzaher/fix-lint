---

- name: "[FAKE SPACES] check presence of fake spaces"
  find:
    paths: "{{ fix_directories }}"
    contains: '^.*\xA0.*$'
    recurse: true
    use_regex: "{{ use_regex }}"
    patterns: "{{ files_pattern }}"
  register: _result
  ignore_errors: true
  failed_when: _result.matched > 0

- name: "[FAKE SPACES] replace fake"
  replace:
    path: "{{ item.path }}"
    regexp: '^(.*)\xA0(.*$)$'
    replace: '\1 \2'
  loop: "{{ _result.files }}"
  when: _result.failed

- name: "[FAKE SPACES] replace fake"
  replace:
    path: "{{ item.path }}"
    regexp: '^(.*)\xA0(.*$)$'
    replace: '\1 \2'
  loop: "{{ _result.files }}"
  when: _result.failed

- name: "[FAKE SPACES] replace fake"
  replace:
    path: "{{ item.path }}"
    regexp: '^(.*)\xA0(.*$)$'
    replace: '\1 \2'
  loop: "{{ _result.files }}"
  when: _result.failed

- name: "[FAKE SPACES] check presence of fake spaces"
  find:
    paths: "{{ fix_directories }}"
    contains: '^.*\xA0.*$'
    recurse: true
    use_regex: "{{ use_regex }}"
    patterns: "{{ files_pattern }}"
  register: _result
  ignore_errors: true
  failed_when: _result.matched > 0