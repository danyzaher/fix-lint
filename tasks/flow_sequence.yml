---

- name: "[FLOW SEQUENCE] Search for apparently bad list"
  find:
    path: "{{ fix_directories }}"
    patterns: "{{ files_pattern }}"
    contains: ^( *)(.*:) *\[([\"|\'].*\{\{.*\}\}\/?.*[\"|\']),? *([\"|\'].*\{\{.*\}\}\/?.*[\"|\'],?)\]$
    use_regex: "{{ use_regex }}"
    recurse: true
  register: _result 
  failed_when: _result.matched > 0
  ignore_errors: true

- debug:
    msg: "{{ _result }}"

- name: "[FLOW SEQUENCE] Search for apparently bad list"
  replace:
    path: "{{ item.path }}"
    regexp: ^( *)(.*:) *\[([\"|\'].*\{\{.*\}\}\/?.*[\"|\']),? *([\"|\'].*\{\{.*\}\}\/?.*[\"|\'],?)\]$
    replace: |
      \1\2
      \1  - \3
      \1  - \4
  loop: "{{ _result.files }}"
  when: _result.failed

- name: "[FLOW SEQUENCE] Search for apparently bad list"
  find:
    path: "{{ fix_directories }}"
    patterns: "{{ files_pattern }}"
    contains: ^( *)(.*:) *\[([\"|\'].*\{\{.*\}\}\/?.*[\"|\']),? *([\"|\'].*\{\{.*\}\}\/?.*[\"|\'],?)\]$
    use_regex: "{{ use_regex }}"
    recurse: true
  register: _result 
  failed_when: _result.matched > 0
  ignore_errors: true